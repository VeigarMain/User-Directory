{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jake\\\\Desktop\\\\bootcamp\\\\UserDirectory\\\\src\\\\components\\\\Main\\\\main.js\";\nimport React, { Component } from 'react';\nimport Search from '../Search/search';\nimport Table from '../Table/table';\nimport Header from \"../Header/header\";\nimport axios from 'axios'; // initialized an array to store api call results that are needed to render \\\\\n\nlet resArray;\nexport default class State extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      results: [],\n      acsend: false\n    };\n\n    this.handleChange = event => {\n      const key = event.target.value;\n      const filter = resArray.filter(entry => Object.values(entry).some(val => typeof val === \"string\" && val.includes(key)));\n      this.setState({\n        search: key,\n        results: filter\n      });\n    };\n\n    this.sortBy = sort => {\n      if (this.state.ascend === true) {\n        const acsendFalse = this.state.results.sort((a, b) => a[sort] < b[sort] ? 1 : -1);\n        this.setState({\n          results: acsendFalse,\n          ascend: false\n        });\n      } else {\n        const acsendTrue = this.state.results.sort((a, b) => a[sort] > b[sort] ? 1 : -1);\n        this.setState({\n          results: acsendTrue,\n          ascend: true\n        });\n      }\n    };\n\n    this.toTop = () => {\n      document.documentElement.scrollTop = 0;\n    };\n  }\n\n  // immediately calls api on launch of app \\\\\n  componentDidMount() {\n    axios.get('https://randomuser.me/api/?results=150').then(res => {\n      // takes api response and maps to the resArray from above \\\\\n      resArray = res.data.results.map(person => {\n        var dateString = person.dob.date;\n        var d = new Date(dateString);\n        var correctDate = d.getMonth() + 1 + '.' + d.getDate() + '.' + d.getFullYear(); // pulls only the relevant items from api \\\\ \n\n        return {\n          image: person.picture.large,\n          name: `${person.name.first} ${person.name.last}`,\n          phone: person.phone,\n          email: person.email,\n          dob: correctDate,\n          age: person.dob.age\n        };\n      }); // sets the results state to the new array \\\\\n\n      this.setState({\n        results: resArray\n      });\n    }) // if error occurs \\\\\n    .catch(function (error) {\n      console.log(error);\n    });\n  } // allows for rerendering of employees on change of the search \\\\\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      toTop: this.toTop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Search, {\n      search: this.state.search,\n      handleChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Table, {\n      results: this.state.results,\n      sortBy: this.sortBy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Jake/Desktop/bootcamp/UserDirectory/src/components/Main/main.js"],"names":["React","Component","Search","Table","Header","axios","resArray","State","state","search","results","acsend","handleChange","event","key","target","value","filter","entry","Object","values","some","val","includes","setState","sortBy","sort","ascend","acsendFalse","a","b","acsendTrue","toTop","document","documentElement","scrollTop","componentDidMount","get","then","res","data","map","person","dateString","dob","date","d","Date","correctDate","getMonth","getDate","getFullYear","image","picture","large","name","first","last","phone","email","age","catch","error","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Search from '../Search/search';\r\nimport Table from '../Table/table';\r\nimport Header from \"../Header/header\";\r\nimport axios from 'axios';\r\n\r\n// initialized an array to store api call results that are needed to render \\\\\r\nlet resArray;\r\n\r\nexport default class State extends Component {\r\n    // initializes state for later use\r\n    state = {\r\n        search: \"\",\r\n        results: [],\r\n        acsend: false\r\n    }\r\n\r\n    // immediately calls api on launch of app \\\\\r\n    componentDidMount() {\r\n        axios.get('https://randomuser.me/api/?results=150')\r\n            .then(res => {\r\n                // takes api response and maps to the resArray from above \\\\\r\n                resArray = res.data.results.map(person => {\r\n                    var dateString = person.dob.date;\r\n                    var d = new Date(dateString);\r\n                    var correctDate = (d.getMonth() + 1) + '.' + d.getDate() + '.' + d.getFullYear();\r\n                    // pulls only the relevant items from api \\\\ \r\n                    return {\r\n                        image: person.picture.large,\r\n                        name: `${person.name.first} ${person.name.last}`,\r\n                        phone: person.phone,\r\n                        email: person.email,\r\n                        dob: correctDate,\r\n                        age: person.dob.age\r\n                    }\r\n                });\r\n\r\n                // sets the results state to the new array \\\\\r\n                this.setState({ results: resArray })\r\n            })\r\n            // if error occurs \\\\\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    // allows for rerendering of employees on change of the search \\\\\r\n    handleChange = event => {\r\n        const key = event.target.value;\r\n        const filter = resArray.filter(entry => Object.values(entry).some(val => typeof val === \"string\" && val.includes(key)));\r\n\r\n        this.setState({\r\n            search: key,\r\n            results: filter\r\n        });\r\n    }\r\n\r\n    sortBy = sort => {\r\n        if (this.state.ascend === true) {\r\n            const acsendFalse = this.state.results.sort((a, b) => a[sort] < b[sort] ? 1 : -1);\r\n\r\n            this.setState({\r\n                results: acsendFalse,\r\n                ascend: false\r\n            });\r\n        } else {\r\n            const acsendTrue = this.state.results.sort((a, b) => a[sort] > b[sort] ? 1 : -1);\r\n\r\n            this.setState({\r\n                results: acsendTrue,\r\n                ascend: true\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    toTop = () => {\r\n        document.documentElement.scrollTop = 0;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header toTop={this.toTop}/>\r\n                <Search search={this.state.search} handleChange={this.handleChange} />\r\n                <Table results={this.state.results} sortBy={this.sortBy} />\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}